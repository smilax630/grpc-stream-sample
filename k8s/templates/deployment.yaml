apiVersion: apps/v1
kind: Deployment
metadata:
  name: stream-deployment
  labels:
    app: stream
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  selector:
    matchLabels:
      app: stream
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: stream
        version: {{ .Values.api.labels.version }}
    spec:
      volumes:
        - name: envoy
          configMap:
            name: stream-envoy-config
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: envoy
          image: envoyproxy/envoy:v1.17-latest
          command:
            - "/usr/local/bin/envoy"
          args:
            - "--config-path /etc/envoy/envoy.yaml"
          resources:
            limits:
              memory: 512Mi
          ports:
            - containerPort: 15002
              name: s-envoy-app
            - containerPort: 50052
              name: s-envoy-admin
          volumeMounts:
            - name: envoy
              mountPath: /etc/envoy
        - name: stream
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          resources:
            requests:
              cpu: {{ .Values.api.resources.requests.cpu }}
              memory: {{ .Values.api.resources.requests.memory }}
            limits:
              cpu: {{ .Values.api.resources.limit.cpu }}
              memory: {{ .Values.api.resources.limit.memory }}
          imagePullPolicy: Always
          command: ["sh", "-c", "sleep 3 && /usr/local/bin/server/main v1"]
          env:
          - name: ENV
            value: {{ .Values.env }}
          ports:
          - containerPort: 50052
      nodeSelector:
        pool: app
